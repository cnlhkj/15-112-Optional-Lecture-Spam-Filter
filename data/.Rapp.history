plot(cars)
summary(cars)
```
library(ggplot2)
library(dplyr)
library(Rmisc)
library(ggplot2)
library(Rmisc)
library(dplyr)
library(maps)
states = map_data("states")
states = map_data("state")
qplot(states)
fake_data = as.data.frame(matrix(rnorm(1000*101,0,1),1000,101))
m = step(object=lm(y~1,data=fake_data,direction="forward"))
m = step(object=lm(y~1,data=fake_data),direction="forward")
m
summary(m)
m = step(lm(y~1,data=fake_data),direction="forward")
m
m = step(scope=list(lm(y~1,data=fake_data),lm(y~.,data=fake_data)),direction="forward")
m = step(lm(y~1,data=fake_data),scope=list(lm(y~1,data=fake_data),lm(y~.,data=fake_data)),direction="forward")
m = step(lm(y~1,data=fake_data),scope=list(lower=lm(y~1,data=fake_data),upper=lm(y~.,data=fake_data)),direction="forward")
m = step(lm(y~1,data=fake_data),scope=list(lower=lm(y~1,data=fake_data),upper=lm(y~.,data=fake_data)))
fake_data
m = step(lm(y~1,data=fake_data),scope=list(lower=lm(y~1,data=fake_data),upper=lm(y~.,data=fake_data)))
a
fake_data = as.data.frame(matrix(rnorm(1000*101,0,1),1000,101))
m = step(lm(y~1,data=fake_data),scope=list(lower=lm(y~1,data=fake_data),upper=lm(y~.,data=fake_data)))
m = step(lm(y~1,data=fake_data),direction="forward")
m
m = step(lm(y~.,data=fake_data),direction="forward")
m = step(lm(V1 ~ .,data=fake_data),direction="forward")
summary(m)
m = step(lm(V1 ~ .,data=fake_data),direction="backward")
y = data.frame(array.6[,1])
colnames(fake_data)
array.6
step(object=lm(V1 ~ 1),data=fake_data,direction="forward")
fake_data
head(fake_data)
colnames(fake_data)
step(object=lm(V1 ~ 1,data=data),direction="forward")
step(object=lm(V1 ~ 1,data=fake_data),direction="forward")
step(lm(V1 ~ 1,data=fake_data),direction="forward")
step(object=lm(V1 ~ 1),data=fake_data,direction="forward")
m = step(lm(V1 ~ .,data=fake_data),direction="backward")
m = step(lm(V1 ~ 1,data=fake_data),direction="forward")
m = step(lm(V1 ~ 1,data=fake_data),direction="backward")
m = step(lm(V1 ~ .,data=fake_data),direction="forward")
m = step(lm(V1 ~ .,data=fake_data),direction="backward")
load(".RData")
ls()
getwd()
getwd()
setwd("/Users/edwdryer/Desktop/15-112-Optional-Lecture-Spam-Filter")
setwd("/Users/edwdryer/Desktop/15-112-Optional-Lecture-Spam-Filter")
library(kernlab)
packages.install(kernlab)
install.packages(kernlab)
install.packages(kernlab)
library(kernlab)
data(spam)
spam
head(spam)
dim(spam)
about(spam)
spam
head(spam)
head(spam)
desc
description
des
desc
description
help(spam)
head(spam)
kable(spam)
libary(knitr)
library(knitr)
kable(head(spam))
rmarkdown::render("/Users/edwdryer/Desktop/15-112-Optional-Lecture-Spam-Filter/spam_desc.rmd")
help(spam)
rmarkdown::render("/Users/edwdryer/Desktop/15-112-Optional-Lecture-Spam-Filter/spam_desc.rmd")
rmarkdown::render("/Users/edwdryer/Desktop/15-112-Optional-Lecture-Spam-Filter/spam_desc.rmd")
kable(head(which(spam$type != "spam"))
)
kable(head(which(spam$type != "spam")))
kable(head(spam[which(spam$type != "spam"),]))
rmarkdown::render("/Users/edwdryer/Desktop/15-112-Optional-Lecture-Spam-Filter/spam_desc.rmd")
write.csv(spam,'data.csv')
setwd("/Users/edwdryer/Desktop/15-112-Optional-Lecture-Spam-Filter/data")
data(spam)
kable(head(spam))
kable(head(spam[which(spam$type != "spam"),]))
write.csv(spam,'../spam.csv')
write.csv(spam,'../spam.csv')
